name: TWSE/TPEX KD Screener (Daily 15:00 TPE)

on:
  schedule:
    - cron: "0 7 * * *"     # 每日 07:00 UTC = 台北 15:00
  workflow_dispatch:

jobs:
  run-screener:
    runs-on: ubuntu-latest

    # 把 secrets 映射成環境變數，方便 step 之間使用
    env:
      TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Create .env for this run
        run: |
          cat > .env << 'EOF'
          # —— 通知設定（用於主程式）——
          TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
          TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}

          # —— 參數（可依需求調整）——
          TOP_N=20
          KD_N=9
          KD_K_SMOOTH=3
          KD_D_PERIOD=3
          KD_CROSS_WINDOW=3
          KD_REQUIRE_ZONE=false
          KD_ZONE_LOW=40
          KD_ZONE_HIGH=80

          VOLUME_LOOKBACK=20
          VOLUME_MULTIPLIER=1.5

          ENABLE_RULE_BLACK_CANDLE_LIMIT=true
          BLACK_CANDLE_MAX_DROP=0.95
          ENABLE_RULE_OC_ABOVE_MA20=true
          ENABLE_RULE_LAST5_MA10_THRESHOLD=true
          MAX_DAYS_BELOW_MA10_IN_5=3
          ENABLE_RULE_MA5_GT_MA20=true

          MARKET_CAP_MIN=10000000000
          BATCH_SIZE=120
          EOF

      - name: Install dependencies
        run: |
          pip install -U pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            # 你程式用到的最低組合（如需 yfinance/bs4 請加上）
            pip install pandas numpy requests python-dotenv lxml yfinance beautifulsoup4
          fi

      - name: Run screener
        run: python src/main.py

      - name: Show outputs & logs (for debugging)
        if: always()
        run: |
          echo "== repo tree =="
          ls -R
          echo "== output =="
          ls -al output || true
          echo "== logs =="
          ls -al logs || true
          echo "== tail app.log =="
          tail -n 200 logs/app.log || true

      - name: Ensure at least one CSV exists (create empty if none)
        if: always()
        run: |
          mkdir -p output
          if ! ls output/*.csv >/dev/null 2>&1; then
            echo "No CSV found; creating an empty CSV placeholder."
            # 欄位請依你的 main.py 寫出來的欄位名稱為準（這份是常見欄位）
            echo "date,code,name,close,K,D,vol_ratio,cross_day,market_cap,k_minus_d,rank_k,rank_v,trend_c,score" > "output/empty_$(date -u +%Y%m%d).csv"
          fi

      - name: Upload CSV artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: picks-${{ github.run_id }}
          path: output/
          retention-days: 14

      # 可選：測試 Telegram 是否可用（用 env 判斷是否有設）
      - name: (Test) send a Telegram ping
        if: ${{ env.TELEGRAM_BOT_TOKEN != '' && env.TELEGRAM_CHAT_ID != '' }}
        run: |
          curl -sS -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
            -d chat_id="${TELEGRAM_CHAT_ID}" \
            -d text="✅ GitHub Actions: Telegram 測試成功（twas_KD）" \
            -o /dev/null -w "HTTP %{http_code}\n"
