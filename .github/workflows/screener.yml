name: TWSE/TPEX KD Screener (Daily 15:00 TPE)

on:
  schedule:
    - cron: "0 7 * * *"   # 每天 07:00 UTC = 台北 15:00
  workflow_dispatch: {}    # 允許手動觸發

permissions:
  contents: read

defaults:
  run:
    shell: bash

jobs:
  run-screener:
    runs-on: ubuntu-latest
    env:
      TZ: Asia/Taipei

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Create .env for this run
        run: |
          cat > .env << 'EOF'
          # ====== Secrets for Telegram (留空也可，程式會自動略過) ======
          TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID=${{ secrets.TELEGRAM_CHAT_ID }}

          # ====== Screener Parameters ======
          TOP_N=20
          FINAL_TOP=5

          # KD
          KD_N=9
          KD_K_SMOOTH=3
          KD_D_PERIOD=3
          KD_CROSS_WINDOW=3
          KD_REQUIRE_ZONE=false
          KD_ZONE_LOW=40
          KD_ZONE_HIGH=80

          # Volume
          VOLUME_LOOKBACK=20
          VOLUME_MULTIPLIER=1.5

          # Candle/MA rules
          ENABLE_RULE_BLACK_CANDLE_LIMIT=true
          BLACK_CANDLE_MAX_DROP=0.95
          ENABLE_RULE_OC_ABOVE_MA20=true
          ENABLE_RULE_LAST5_MA10_THRESHOLD=true
          MAX_DAYS_BELOW_MA10_IN_5=3
          ENABLE_RULE_MA5_GT_MA20=true

          # Liquidity (新增)
          MIN_LIQ_N=10
          MIN_LIQ_SHARES=1000000

          # Market cap / batching
          MARKET_CAP_MIN=10000000000
          BATCH_SIZE=120
          EOF

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install pandas numpy requests python-dotenv lxml yfinance
          fi

      - name: Run screener
        run: python src/main.py

      - name: Upload CSV artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: picks-${{ github.run_id }}
          path: output/*.csv
          retention-days: 14

      - name: Telegram ping (optional)
        env:
          BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          if [ -n "$BOT_TOKEN" ] && [ -n "$CHAT_ID" ]; then
            curl -sS -X POST "https://api.telegram.org/bot${BOT_TOKEN}/sendMessage" \
              -d chat_id="${CHAT_ID}" \
              -d text="✅ GitHub Actions：任務完成（CSV 已上傳到 artifacts）。" \
              -o /dev/null || true
          else
            echo "Telegram secrets not set; skipping ping."
          fi
