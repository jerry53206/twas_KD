# TWSE+TPEX KD Screener — 每天台北時間 15:00 執行
# 備註：
# 1) 會在 output/ 產生 picks_YYYYMMDD.csv
# 2) CSV 欄位包含「streak_days」（連續出現天數；若今日無標的則可能為空表）
# 3) 若設定了 TELEGRAM_BOT_TOKEN / TELEGRAM_CHAT_ID，會推送摘要

name: TWSE KD Screener (Daily 15:00 TPE)

on:
  schedule:
    - cron: "0 7 * * *"   # 07:00 UTC = 15:00 TPE
  workflow_dispatch:

jobs:
  run-screener:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Create .env for this run
        run: |
          cat > .env << 'EOF'
          # —— 通知（請到 GitHub Repo > Settings > Secrets 新增）——
          TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID=${{ secrets.TELEGRAM_CHAT_ID }}

          # —— 參數（可依需求調整）——
          TOP_N=20

          KD_N=9
          KD_K_SMOOTH=3
          KD_D_PERIOD=3
          KD_CROSS_WINDOW=3
          KD_REQUIRE_ZONE=false
          KD_ZONE_LOW=40
          KD_ZONE_HIGH=80

          VOLUME_LOOKBACK=20
          VOLUME_MULTIPLIER=1.5
          MIN_VOL_10D=1000000

          ENABLE_RULE_BLACK_CANDLE_LIMIT=true
          BLACK_CANDLE_MAX_DROP=0.95
          ENABLE_RULE_OC_ABOVE_MA20=true
          ENABLE_RULE_LAST5_MA10_THRESHOLD=true
          MAX_DAYS_BELOW_MA10_IN_5=3
          ENABLE_RULE_MA5_GT_MA20=true

          MARKET_CAP_MIN=10000000000
          BATCH_SIZE=120
          EOF

      - name: Install dependencies
        run: |
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install pandas numpy requests python-dotenv lxml yfinance
          fi

      - name: Run screener
        env:
          TZ: Asia/Taipei
        run: python src/main.py

      - name: Show CSV headers (streak_days should be present when there are results)
        run: |
          ls -l output || true
          if compgen -G "output/*.csv" > /dev/null; then
            echo "---- CSV first lines ----"
            head -n 2 output/*.csv || true
            echo "-------------------------"
            python - << 'PY'
import glob, pandas as pd, os
files = glob.glob("output/*.csv")
if not files:
    print("No CSV generated.")
else:
    for f in files:
        try:
            df = pd.read_csv(f)
            print(f"Columns in {os.path.basename(f)}:", ", ".join(df.columns))
        except Exception as e:
            print(f"Read failed for {f}: {e}")
PY
          else
            echo "No CSV files found in output/ (可能今日完全無標的，或程式提前返回)。"
          fi

      - name: Upload CSV artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: picks-${{ github.run_id }}
          path: output/*.csv
          retention-days: 14

      - name: (Optional) Telegram ping to verify secrets
        if: ${{ secrets.TELEGRAM_BOT_TOKEN != '' && secrets.TELEGRAM_CHAT_ID != '' }}
        run: |
          curl -sS -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
            -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
            -d text="✅ GitHub Actions: 已完成執行，CSV 含 streak_days 欄位（若有標的）。" \
            -o /dev/null -w "HTTP %{http_code}\n"
